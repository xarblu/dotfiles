#!/usr/bin/env bash

# main bashrc to be sourced from ${HOME}/.bashrc

function __main__() {
    declare -g BASH_CONF_DIR="${BASH_SOURCE[0]%/*}"
    local moddir="${BASH_CONF_DIR}/modules"
    if [[ ! -d "${moddir}" ]]; then
        printf "Config module dir %s does not exist\n" "${moddir}" 1>&2
        return 1
    fi
    
    # load all modules
    # only proceed if we could load everything we
    # expected to avoid a completely broken shell
    local mod
    for mod in env utils plugins misc external functions; do
        if [[ -f "${moddir}/${mod}.sh" ]]; then
            # shellcheck disable=SC1090,SC1091
            source -- "${moddir}/${mod}.sh"
        else
            printf "Required module %s does not exist in %s\n" "${mod}" "${moddir}" 1>&2
            return 1
        fi
    done

    # if this shell is not interactive stop here
    [[ "${-}" != *i* ]] && return 0

    # initialise (install + load) plugins
    __plugins_init__ || log --warn "Plugin initialisation did not exit cleanly"

    # misc setup like ensuring directories/files exist
    __misc_setup__ || log --warn "Misc setup did not exit cleanly"

    # setup stuff related to external tools
    __external_setup__ || log --warn "External setup did not exit cleanly"

    # finalize plugins - this should be at the very end
    __plugins_finalize__ || log --warn "Plugin finalisation did not exit cleanly"
}
__main__ || { printf "bashrc: Errors during initialisation\n" 1>&2; }
